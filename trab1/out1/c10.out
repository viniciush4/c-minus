5: void -> VOID
5: main -> ID
5: ( -> LPAREN
5: void -> VOID
5: ) -> RPAREN
5: { -> LBRACE
6: int -> INT
6: x -> ID
6: ; -> SEMI
7: int -> INT
7: fact -> ID
7: ; -> SEMI
9: x -> ID
9: = -> ASSIGN
9: input -> INPUT
9: ( -> LPAREN
9: ) -> RPAREN
9: ; -> SEMI
10: if -> IF
10: ( -> LPAREN
10: x -> ID
10: > -> GT
10: 0 -> NUM
10: ) -> RPAREN
10: { -> LBRACE
11: fact -> ID
11: = -> ASSIGN
11: 1 -> NUM
11: ; -> SEMI
12: while -> WHILE
12: ( -> LPAREN
12: x -> ID
12: != -> NEQ
12: 0 -> NUM
12: ) -> RPAREN
12: { -> LBRACE
13: fact -> ID
13: = -> ASSIGN
13: fact -> ID
13: * -> TIMES
13: x -> ID
13: ; -> SEMI
14: x -> ID
14: = -> ASSIGN
14: x -> ID
14: - -> MINUS
14: 1 -> NUM
14: ; -> SEMI
15: } -> RBRACE
16: output -> OUTPUT
16: ( -> LPAREN
16: fact -> ID
16: ) -> RPAREN
16: ; -> SEMI
17: } -> RBRACE
18: } -> RBRACE
