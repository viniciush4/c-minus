7: void -> VOID
7: main -> ID
7: ( -> LPAREN
7: void -> VOID
7: ) -> RPAREN
7: { -> LBRACE
8: int -> INT
8: age -> ID
8: ; -> SEMI
10: age -> ID
10: = -> ASSIGN
10: input -> INPUT
10: ( -> LPAREN
10: ) -> RPAREN
10: ; -> SEMI
11: if -> IF
11: ( -> LPAREN
11: age -> ID
11: >= -> GE
11: 18 -> NUM
11: ) -> RPAREN
11: { -> LBRACE
12: if -> IF
12: ( -> LPAREN
12: age -> ID
12: < -> LT
12: 60 -> NUM
12: ) -> RPAREN
12: { -> LBRACE
13: write -> WRITE
13: ( -> LPAREN
13: "Adult\n" -> STRING
13: ) -> RPAREN
13: ; -> SEMI
14: } -> RBRACE
14: else -> ELSE
14: { -> LBRACE
15: write -> WRITE
15: ( -> LPAREN
15: "Elder\n" -> STRING
15: ) -> RPAREN
15: ; -> SEMI
16: } -> RBRACE
17: } -> RBRACE
17: else -> ELSE
17: { -> LBRACE
18: write -> WRITE
18: ( -> LPAREN
18: "Minor\n" -> STRING
18: ) -> RPAREN
18: ; -> SEMI
19: } -> RBRACE
20: } -> RBRACE
