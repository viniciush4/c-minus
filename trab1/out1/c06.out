5: void -> VOID
5: main -> ID
5: ( -> LPAREN
5: void -> VOID
5: ) -> RPAREN
5: { -> LBRACE
6: write -> WRITE
6: ( -> LPAREN
6: "4 + 2 = " -> STRING
6: ) -> RPAREN
6: ; -> SEMI
7: output -> OUTPUT
7: ( -> LPAREN
7: 4 -> NUM
7: + -> PLUS
7: 2 -> NUM
7: ) -> RPAREN
7: ; -> SEMI
8: write -> WRITE
8: ( -> LPAREN
8: "\n" -> STRING
8: ) -> RPAREN
8: ; -> SEMI
10: write -> WRITE
10: ( -> LPAREN
10: "5 - 2 = " -> STRING
10: ) -> RPAREN
10: ; -> SEMI
11: output -> OUTPUT
11: ( -> LPAREN
11: 5 -> NUM
11: - -> MINUS
11: 2 -> NUM
11: ) -> RPAREN
11: ; -> SEMI
12: write -> WRITE
12: ( -> LPAREN
12: "\n" -> STRING
12: ) -> RPAREN
12: ; -> SEMI
14: write -> WRITE
14: ( -> LPAREN
14: "4 * 2 = " -> STRING
14: ) -> RPAREN
14: ; -> SEMI
15: output -> OUTPUT
15: ( -> LPAREN
15: 4 -> NUM
15: * -> TIMES
15: 2 -> NUM
15: ) -> RPAREN
15: ; -> SEMI
16: write -> WRITE
16: ( -> LPAREN
16: "\n" -> STRING
16: ) -> RPAREN
16: ; -> SEMI
18: write -> WRITE
18: ( -> LPAREN
18: "4 / 2 = " -> STRING
18: ) -> RPAREN
18: ; -> SEMI
19: output -> OUTPUT
19: ( -> LPAREN
19: 4 -> NUM
19: / -> OVER
19: 2 -> NUM
19: ) -> RPAREN
19: ; -> SEMI
20: write -> WRITE
20: ( -> LPAREN
20: "\n" -> STRING
20: ) -> RPAREN
20: ; -> SEMI
21: } -> RBRACE
